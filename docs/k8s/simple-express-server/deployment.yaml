apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: express-api #要抓取的label
  template:
    metadata:
      labels:
        app: express-api #pod上打的label
    spec:
      containers:
      - name: express-api
        image: simple-express-server:0.0.4
        imagePullPolicy: IfNotPresent
        #imagePullPolicy: Always #如果測試時版本會一直更新
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        livenessProbe:
          httpGet:
            path: /live
            port: 3000
          #initialDelaySeconds: 0 #即預設
          periodSeconds: 10
          failureThreshold: 1 # 3寬鬆點、主要看情境、可能會一直重啟
        readinessProbe: # 只會不輸入流量，不會關機
          httpGet:
            path: /ready
            port: 3000
          periodSeconds: 20 # 測試用
          failureThreshold: 3 # 測試用
          #periodSeconds: 30
          #failureThreshold: 10 # 10*30=300秒不能一直unhealth
        startupProbe: # 這個在時限內啟動成功才會使用liveness,readiness，否則重啟
          httpGet:
            path: /startup
            port: 3000
          periodSeconds: 10
          failureThreshold: 6 # 6*10=60秒內起startup
---
apiVersion: v1
kind: Service
metadata:
  name: express-api-nodeport
spec:
  selector:
    app: express-api
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    #nodePort: 30000 # 可以省略給k8s分配，填值30000-32767

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: express-api-loadbalancer
# spec:
#   selector:
#     app: express-api
#   type: LoadBalancer
#   ports:
#   - port: 80
#     targetPort: 3000